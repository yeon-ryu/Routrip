create table user(
uid int primary key auto_increment,
nickname varchar(20) not null,
name varchar(20),
email varchar(50),
password varchar(500),
phone varchar(20),
birth date,
profileImg varchar(500) default 'https://i.imgur.com/CRuieow.png',
loginApi int not null default 0,
userkey varchar(10) not null,
userid varchar(500)
);

create table follow(
following int,
follower int,
foreign key(following)
references user(uid) on update cascade on delete cascade,
foreign key(follower)
references user(uid) on update cascade on delete cascade
);

create table board(
boardid int primary key auto_increment,
uid int not null,
title varchar(100) not null,
writedate datetime not null,
tripterm varchar(10) not null,
keyword varchar(500),
favoriteNum int not null default 0,
unveiled boolean not null default true,
content text(4000000000),
info text(4000000000),
cusinfo text(4000000000),
foreign key(uid)
references user(uid) on update cascade on delete cascade
);

create table favorite(
uid int not null,
boardid int not null,
makedate datetime not null,
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table scrap(
uid int not null,
boardid int not null,
makedate datetime not null,
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table comment(
commentid int primary key auto_increment,
uid int not null,
boardid int not null,
contents varchar(1000) not null,
writedate datetime not null,
listener int not null default 0,
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table img(
imgid int  primary key auto_increment,
boardid int not null,
src varchar(500) not null,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table marker(
markerid int primary key auto_increment,
boardid int not null,
latitude varchar(1000) not null,
longitude varchar(1000) not null,
overlaytype varchar(100) not null,
radius double,
rx double,
ry double,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table blacklist(
uid int not null,
exp datetime not null,
jwt varchar(500)
);

create table alarm(
alarmid int primary key auto_increment,
uid int not null,
boardid int,
commentid int,
alarmtype int not null,
actionid int,
time datetime not null,
isread boolean not null default fasle,
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(actionid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade,
foreign key(commentid)
references comment(commentid) on update cascade on delete cascade
);